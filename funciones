##############################################
#!/usr/bin/env bash
# Autor: usuario 
# Version: 
# Descripción: 
# Fecha de creación: mar 29 mar 2022 10:30:46 CEST

# Zona de declaración de variables
directorio="/QUOTA"
binario="quota quotatool"
repo="ftp.es.debian.org"
# Fin Zona
 

# Zona de declaración de funciones

#Límpia pantalla
function f_limpia {
        clear
}

#Comprobar si somos root
function f_root {
        if [ $UID -eq 0 ]
        then
	    echo "El usuario es root"
            return 0
        else
            echo "Necesitas ser root para ejecutar el script. Cancelando script"
	    exit
        fi
        }


#Mira si hay conexión con ftp.es.debian.org.
function f_conexion {
    ping -c1 $repo &>/dev/null
    ping -c1 $repo &>/dev/null
    if [ $? -eq 0 ]; then
        echo "Hay conexión"
        return 0
    else
        echo "No hay conexion"
        exit
    fi
}


#Instala el paquete introducido como argumento.
function f_instalaPaquete {
	whatis quota &> /dev/null
	if [ $? != 0 ]; then
		echo "El paquete quota no se encuentra instalado, procedemos a instalarlo"
		apt update -y &> /dev/null
		apt install -y $binario &> /dev/null
	fi
}

#------------------------------------------------------------------------------------------------

#Indica si existe el directorio /QUOTA
function f_existe_directorio {
        if [ -d $directorio ]
        then
            echo "Se ha encontrado el directorio "$directorio
            chmod 777 /QUOTA/
            return 0
        else
            echo "No existe el directorio $directorio, procedemos a crearlo..."
            mkdir /QUOTA
            if [ $? -eq 0 ]; then
		echo "Directorio $directorio creado satisfactoriamente"
	    fi
	    chmod 777 /QUOTA/
	    return 0
        fi
}

#Función para mostrar los dispositivos que hay disponibles para realizar la cuota
function f_mostrar_lsblk {
        echo "----Lista de los dispositivos disponibles---"
        lsblk
}

#Comprobamos que el dispositivo introducido por teclado existe y tiene formato
function f_UUID {
    blkid -s UUID -o value /dev/$dispositivo &> /dev/null
    if [ $? -ne 0 ]; then
        echo "El dispositivo no existe. Terminando el script..."
        exit
    else
        echo "El dispositivo existe."
        return 0
    fi
}

#Comprobamos si el dispositivo existe ya en el fstab
function f_modifica_fstab {
        grep -o "$uuid" /etc/fstab &> /dev/null
        if [ $? -eq 0 ]; then
                echo "El dispositivo ya está añadido en el fichero /etc/fstab"
                return 0
        else
                echo "El dispositivo de bloques no está en el fichero /etc/fstab, añadiendolo a /etc/fstab"
                echo "UUID=$uuid $directorio               ext4    defaults,usrquota,grpquota 0       2" >> /etc/fstab
		mount -a
		return 0
        fi
}

#Habilitamos la cuota en el directorio QUOTA y comprobamos que los ficheros necesarios estén creados
function f_habilita_quota {
        if [ -e /QUOTA/aquota.user ] && [ -e /QUOTA/aquota.group ]; then
                echo "Los ficheros necesarios ya se encuentran en el directorio QUOTAS"
		quotaon $directorio &> /dev/null
		if [ $? -eq 0 ]; then
			echo "Cuota habilitada"
			return 0
		fi
        else
		 echo "Los ficheros aquota.user y aquota.group no están creados, procedemos a crearlos"
                 quotacheck -ugv /QUOTA &> /dev/null
		 if [ $? -eq 0 ]; then
			echo "Archivos creados exitosamente"
			quotaon $directorio
			if [ $? -eq 0 ]; then
				echo "Cuota habilitada"
				return 0
			fi
		 else
			echo "Ha habido algún problema al crear los ficheros"
			exit
		 fi
        fi
}

#Configuración de la cuota para un usuario
function f_configura_quota {
       echo "----Procedemos a crear la cuota----"
       read -p "¿A que usuario le quieres aplicar la cuota?: " usuario
       awk -F: '{ print $1}' /etc/passwd | grep -o $usuario &> /dev/null
       if [ $? -ne 0 ]; then
           echo "El usuario que has introducido no existe, procedemos a crearlo..."
	   useradd -s /bin/bash -m $usuario
	   echo "Usuario $usuario creado correctamente"
       fi
       read -p "Límite blando a asignar (especifica si lo quieres por ejemplo en megas, M): " blando
       read -p "Límite duro a asignar (especifica si lo quieres por ejemplo en megas, M): " duro
       quotatool -u $usuario -bq $blando -l $duro /QUOTA
       if [ $? -eq 0 ]; then
                    echo "Cuota aplicada correctamente"
       else
                    echo "Error al intentar crear la cuota. Revisa los datos introducidos"
		    exit
       fi
}

#Le copiamos la cuota a un usuario del sistema y la aplicamos sobre otro
function f_plantilla_quota {
       read -p "Elije el usuario al que copiar su plantilla: " usuario1
       awk -F: '{ print $1}' /etc/passwd | grep -o $usuario1 &> /dev/null
       if [ $? -ne 0 ]; then
           echo "El usuario al que le quieres copiar su cuota no existe, procedemos a crearlo"
           useradd -s /bin/bash -m $usuario1
	   echo "Usuario $usuario1 creado correctamente"
       fi
       read -p "Usuario al que aplicar la plantilla: " usuario2
       awk -F: '{ print $1}' /etc/passwd | grep -o $usuario2 &> /dev/null
       if [ $? -ne 0 ]; then
           echo "El usuario al que le quieres aplicar la cuota no existe, procedemos a crearlo..."
           useradd -s /bin/bash -m $usuario2
	   echo "Usuario $usuario2 creado correctamente"
       fi
       edquota -p $usuario1 $usuario2
       if [ $? = 0 ]; then
                echo "Plantilla aplicada correctamente"
        else
                echo "Error al copiar la plantilla. Revisa que los nombres de usuarios introducidos sean correctos y existan en tu sistema"
		exit
        fi
}

# Fin Zona


##############################################
